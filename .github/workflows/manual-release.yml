name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.1)'
        required: true
        type: string
      release_notes:
        description: 'Release notes'
        required: false
        type: string
        default: ''
      prerelease:
        description: 'Mark as prerelease'
        type: boolean
        default: false

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Update version in code
      run: |
        new_version="${{ github.event.inputs.version }}"
        sed -i "s/_VERSION = .*/_VERSION = \"$new_version\"/" src/luacheck/init.lua
        
        echo "Updated version to: $new_version"
        grep '_VERSION.*=' src/luacheck/init.lua

    - name: Commit version changes
      run: |
        git add src/luacheck/init.lua
        git commit -m "Release version ${{ github.event.inputs.version }}

        ü§ñ Generated with [Claude Code](https://claude.ai/code)

        Co-Authored-By: Claude <noreply@anthropic.com>"
        
        git push origin ${{ github.ref_name }}

    - name: Create tag
      run: |
        tag_name="v${{ github.event.inputs.version }}"
        echo "Creating tag: $tag_name"
        
        git tag -a "$tag_name" -m "Release $tag_name"
        git push origin "$tag_name"

    - name: Wait for build
      run: |
        echo "Waiting for release workflow to complete..."
        sleep 60
        
        tag_name="v${{ github.event.inputs.version }}"
        
        # Wait for release workflow to complete
        for i in {1..30}; do
          echo "Checking release workflow status (attempt $i)..."
          
          if gh run list --branch ${{ github.ref_name }} --limit 5 --workflow "release.yml" | grep -q "$tag_name.*completed.*success"; then
            echo "‚úÖ Release workflow completed successfully"
            break
          fi
          
          if [ $i -eq 30 ]; then
            echo "‚ùå Release workflow did not complete in time"
            exit 1
          fi
          
          sleep 30
        done

    - name: Create release notes
      run: |
        tag_name="v${{ github.event.inputs.version }}"
        
        if [ -n "${{ github.event.inputs.release_notes }}" ]; then
          echo "${{ github.event.inputs.release_notes }}" > release_notes.md
        else
          echo "# Luacheck ${{ github.event.inputs.version }}" > release_notes.md
          echo "" >> release_notes.md
          echo "## Changes" >> release_notes.md
          echo "" >> release_notes.md
          echo "See [CHANGELOG.md](CHANGELOG.md) for detailed changes." >> release_notes.md
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.event.inputs.version }}
        name: Luacheck ${{ github.event.inputs.version }}
        body_path: release_notes.md
        draft: false
        prerelease: ${{ github.event.inputs.prerelease }}
        generate_release_notes: true

    - name: Send notification
      run: |
        echo "‚úÖ Manual release completed successfully!"
        echo "üì¶ Version: ${{ github.event.inputs.version }}"
        echo "üè∑Ô∏è  Tag: v${{ github.event.inputs.version }}"
        echo "üîó Release URL: ${{ github.server_url }}/${{ github.repository }}/releases/tag/v${{ github.event.inputs.version }}"