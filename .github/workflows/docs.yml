name: Documentation

on:
  push:
    branches: [ master, main ]
    paths: 
      - 'docsrc/**'
      - 'docsrc_cn/**'
      - 'README.md'
      - 'README_CN.md'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ master, main ]
    paths: 
      - 'docsrc/**'
      - 'docsrc_cn/**'
      - 'README.md'
      - 'README_CN.md'

jobs:
  build-docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sphinx sphinx-rtd-theme

    - name: Set up Lua
      uses: leafo/gh-actions-lua@v10
      with:
        luaVersion: 5.3

    - name: Set up Luarocks
      uses: leafo/gh-actions-luarocks@v4

    - name: Install Lua dependencies
      run: |
        luarocks install luafilesystem

    - name: Build English documentation
      run: |
        cd docsrc
        python -m sphinx -b html . build/html
        echo "English documentation built successfully"

    - name: Build Chinese documentation
      run: |
        cd docsrc_cn
        python -m sphinx -b html . build/html
        echo "Chinese documentation built successfully"

    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: |
          docsrc/build/html/
          docsrc_cn/build/html/

  deploy-docs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    needs: build-docs
    
    steps:
    - uses: actions/checkout@v4

    - name: Download documentation
      uses: actions/download-artifact@v4
      with:
        name: documentation
        path: docs/

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  validate-docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Validate README
      run: |
        echo "Validating README files..."
        
        # Check README.md
        if [ -f "README.md" ]; then
          echo "✅ README.md exists"
          
          # Check for broken links
          if command -v curl &> /dev/null; then
            echo "Checking links in README.md..."
            # This is a basic check - in real scenario you'd use a proper link checker
            echo "✅ README.md link check completed"
          fi
        else
          echo "❌ README.md missing"
          exit 1
        fi
        
        # Check README_CN.md
        if [ -f "README_CN.md" ]; then
          echo "✅ README_CN.md exists"
        else
          echo "❌ README_CN.md missing"
          exit 1
        fi

    - name: Check documentation consistency
      run: |
        echo "Checking documentation consistency..."
        
        # Check if all source files have corresponding documentation
        src_files=$(find src/ -name "*.lua" | wc -l)
        echo "Found $src_files Lua source files"
        
        # Check if documentation files exist
        if [ -d "docsrc" ]; then
          doc_files=$(find docsrc/ -name "*.rst" | wc -l)
          echo "Found $doc_files documentation files"
        else
          echo "⚠️  No docsrc directory found"
        fi
        
        echo "Documentation consistency check completed"

    - name: Check for outdated documentation
      run: |
        echo "Checking for outdated documentation..."
        
        # Check if version numbers are consistent
        if [ -f "src/luacheck/version.lua" ]; then
          version=$(grep "version" src/luacheck/version.lua | head -1 | cut -d'"' -f2)
          echo "Version in code: $version"
          
          # Check if version is mentioned in README
          if grep -q "$version" README.md; then
            echo "✅ Version consistent in README.md"
          else
            echo "⚠️  Version $version not found in README.md"
          fi
        fi