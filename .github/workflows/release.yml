name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        lua_version: [5.1, 5.2, 5.3, 5.4]
        exclude:
          # Exclude some combinations to reduce build time
          - os: windows-latest
            lua_version: 5.1
          - os: windows-latest
            lua_version: 5.2
          - os: macos-latest
            lua_version: 5.1

    steps:
    - uses: actions/checkout@v4

    - name: Set up Lua
      uses: leafo/gh-actions-lua@v10
      with:
        luaVersion: ${{ matrix.lua_version }}

    - name: Set up Luarocks
      uses: leafo/gh-actions-luarocks@v4

    - name: Install dependencies
      run: |
        luarocks install luafilesystem
        luarocks install argparse
        luarocks install lanes

    - name: Build
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          make windows
        else
          make
        fi
      shell: bash

    - name: Run tests
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          make test_windows
        else
          make test
        fi
      shell: bash

    - name: Test ks language support
      if: matrix.lua_version == '5.3'
      run: |
        cd test
        lua test_ks_simple.lua
      shell: bash

    - name: Create package
      run: |
        make package
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: luacheck-${{ matrix.os }}-lua${{ matrix.lua_version }}
        path: |
          bin/luacheck
          bin/luacheck.exe
          luacheck-*.rockspec
          build/

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Set up environment
      run: |
        echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        echo "RELEASE_NAME=Luacheck $TAG_NAME" >> $GITHUB_ENV

    - name: Create release directory
      run: |
        mkdir -p release
        cp README.md release/
        cp CHANGELOG.md release/
        cp LICENSE release/
        cp -r bin/ release/
        cp -r test/ release/

    - name: Create Linux binary package
      run: |
        cd release
        tar -czf luacheck-${{ env.TAG_NAME }}-linux-x86_64.tar.gz bin/luacheck README.md CHANGELOG.md LICENSE

    - name: Create Windows binary package
      run: |
        cd release
        zip -r luacheck-${{ env.TAG_NAME }}-windows-x86_64.zip bin/luacheck.exe README.md CHANGELOG.md LICENSE

    - name: Create macOS binary package
      run: |
        cd release
        tar -czf luacheck-${{ env.TAG_NAME }}-macos-x86_64.tar.gz bin/luacheck README.md CHANGELOG.md LICENSE

    - name: Create source package
      run: |
        cd release
        tar -czf luacheck-${{ env.TAG_NAME }}-source.tar.gz README.md CHANGELOG.md LICENSE src/ test/ docsrc/ scripts/ spec/

    - name: Create rockspec package
      run: |
        cp *.rockspec release/

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.TAG_NAME }}
        name: ${{ env.RELEASE_NAME }}
        draft: false
        prerelease: contains(env.TAG_NAME, '-')
        files: |
          release/luacheck-${{ env.TAG_NAME }}-linux-x86_64.tar.gz
          release/luacheck-${{ env.TAG_NAME }}-windows-x86_64.zip
          release/luacheck-${{ env.TAG_NAME }}-macos-x86_64.tar.gz
          release/luacheck-${{ env.TAG_NAME }}-source.tar.gz
          release/*.rockspec
          release/README.md
          release/CHANGELOG.md
          release/LICENSE
        generate_release_notes: true

    - name: Publish to Luarocks
      run: |
        luarocks upload luacheck-${{ env.TAG_NAME }}-1.rockspec --api-key=$LUAROCKS_API_KEY
      env:
        LUAROCKS_API_KEY: ${{ secrets.LUAROCKS_API_KEY }}
      if: env.LUAROCKS_API_KEY != ''