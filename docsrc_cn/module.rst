Luacheck 模块
============

使用 ``local luacheck = require "luacheck"`` 导入 ``luacheck`` 模块。它包含以下函数：

* ``luacheck.get_report(source)``：给定源字符串，返回分析数据（一个表）。
* ``luacheck.process_reports(reports, options)``：处理分析报告数组并应用选项。``reports[i]`` 使用 ``options``、``options[i]``、``options[i][1]``、``options[i][2]``、... 作为选项，按该顺序相互覆盖。选项表是一个包含与配置选项相似字段的表；见 :ref:`options`。包含 ``fatal`` 字段的分析报告将被忽略。``process_reports`` 返回最终报告，见 :ref:`report`。
* ``luacheck.check_strings(sources, options)``：使用选项检查源数组，返回最终报告。``sources`` 数组中包含 ``fatal`` 字段的表将被忽略。
* ``luacheck.check_files(files, options)``：使用选项检查文件数组，返回最终报告。可以传递打开的文件句柄而不是文件名，在这种情况下，它们将被读取到 EOF 并关闭。
* ``luacheck.get_message(issue)``：返回问题的字符串消息，见 :ref:`report`。

``luacheck._VERSION`` 包含 Luacheck 版本，格式为 ``MAJOR.MINOR.PATCH`` 的字符串。

将 ``luacheck`` 用作函数等同于调用 ``luacheck.check_files``。

.. _report:

报告格式
--------

最终报告是一个文件报告数组，加上分别包含警告、错误和致命错误总数的 ``warnings``、``errors`` 和 ``fatals`` 字段。

文件报告是一个问题（警告或错误）数组。如果在检查文件时发生致命错误，其报告将包含错误类型的 ``fatal`` 字段和包含错误消息的 ``msg`` 字段。

问题是一个包含指示其类型的 ``code`` 字段的表（见 :doc:`warnings`），以及指向警告源的 ``line``、``column`` 和 ``end_column`` 字段。``name`` 字段可能包含相关变量的名称。某些类型的问题还可以有其他字段：

============= ==============================================================================================================
代码           其他字段
============= ==============================================================================================================
011           ``msg`` 字段包含语法错误消息。
111           ``module`` 字段表示赋值给非模块全局变量。
122, 142, 143 ``indirect`` 字段表示使用局部别名访问全局字段。
122, 142, 143 ``field`` 字段包含相关全局字段的字符串表示。
211           ``func`` 字段表示未使用的变量是函数。
211           ``recursive`` 字段表示未使用的函数是递归的。
211           ``mutually_recursive`` 字段为未使用的相互递归函数设置。
314           ``field`` 字段包含未使用字段或索引的字符串表示。
011           ``prev_line``、``prev_column`` 和 ``prev_end_column`` 字段可能指向额外的相关位置，
              例如未配对的开始括号。
4..           ``prev_line``、``prev_column`` 和 ``prev_end_column`` 字段包含被覆盖定义的位置。
521           ``label`` 字段包含标签名称。
631           如果行结束符在注释或字符串内，``line_ending`` 字段包含 ``"comment"`` 或 ``"string"``。
631           ``max_length`` 字段包含最大允许行长度。
============= ==============================================================================================================

可能存在其他字段用于内部原因。